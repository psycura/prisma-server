# import AnswerWhereInput,ReportUpdateInput,BatchPayload,FileUpdateInput,CommentUpdateInput,AnswerUpdateInput,ReportCreateInput,FileCreateInput,AnswerCreateInput,CommentCreateInput,ReportWhereUniqueInput,FileWhereUniqueInput,AnswerWhereUniqueInput,CommentWhereUniqueInput,FileWhereInput,ReportWhereInput,ReportOrderByInput,FileOrderByInput,File,CommentWhereInput,CommentOrderByInput,Comment,AnswerOrderByInput,Answer, from "../../generated/prisma.graphql"

type Query {
    answers(where: AnswerWhereInput, orderBy: AnswerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Answer]!
    files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
    reports(where: ReportWhereInput, orderBy: ReportOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Report]!
    answer(where: AnswerWhereUniqueInput!): Answer
    file(where: FileWhereUniqueInput!): File
    report(where: ReportWhereUniqueInput!): Report
    answersConnection(where: AnswerWhereInput, orderBy: AnswerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AnswerConnection!
    filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
    reportsConnection(where: ReportWhereInput, orderBy: ReportOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReportConnection!
}

type Mutation {
    createAnswer(data: AnswerCreateInput!): Answer!
    createFile(data: FileCreateInput!): File!
    createReport(data: ReportCreateInput!): Report!
    updateAnswer(data: AnswerUpdateInput!, where: AnswerWhereUniqueInput!): Answer
    updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
    updateReport(data: ReportUpdateInput!, where: ReportWhereUniqueInput!): Report
    deleteAnswer(where: AnswerWhereUniqueInput!): Answer
    deleteFile(where: FileWhereUniqueInput!): File
    deleteReport(where: ReportWhereUniqueInput!): Report
    updateManyReports(data: ReportUpdateInput!, where: ReportWhereInput): BatchPayload!
    deleteManyFiles(where: FileWhereInput): BatchPayload!
    deleteManyReports(where: ReportWhereInput): BatchPayload!

}
